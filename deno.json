{
  "compilerOptions": {
    "strict": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true
  },
  "fmt": {
    "files": {
      "exclude": [
        ".git",
        "_wasm_crypto/target",
        "_wasm_varint/target",
        "cov",
        "encoding/testdata/jsonc",
        "hash/_wasm/target",
        "node/_tools/versions",
        "node/_tools/test",
        "node/integrationtest/yarn.js",
        "wasi/testdata"
      ]
    }
  },
  "importMap": "./test_import_map.json",
  "lint": {
    "files": {
      "exclude": [
        ".git",
        "_wasm_crypto/target",
        "_wasm_varint/target",
        "encoding/testdata/jsonc",
        "cov",
        "hash/_wasm/target",
        "node/vendor",
        "node/_module/node_modules/",
        "node/_tools/versions",
        "node/_tools/test",
        "node/integrationtest/yarn.js",
        "wasi/testdata"
      ]
    }
  },
  "tasks": {
    "test": "deno test --doc --unstable --allow-all --coverage=./cov --ignore=node/",
    "test:browser": "git grep --name-only \"This module is browser compatible.\" | grep -v deno.json | grep -v .github/workflows | xargs deno cache --check --reload --config browser-compat.tsconfig.json",
    "node:unit": "deno test --unstable --allow-all node/ --ignore=node/_tools/test.ts,node/_tools/versions/",
    "node:test": "deno test --unstable --allow-all node/_tools/test.ts",
    "node:setup": "deno run --allow-read --allow-net --allow-write node/_tools/setup.ts",
    "node:check-unstable-api": "deno check --unstable ./node/module_all.ts",
    "build:crypto": "deno task --cwd _wasm_crypto wasmbuild",
    "build:hash": "deno task --cwd hash/_wasm wasmbuild",
    "build:varint": "deno task --cwd _wasm_varint wasmbuild",
    "wasmbuild": "deno run --unstable -A https://deno.land/x/wasmbuild@0.6.0/main.ts --js-ext mjs --sync"
  }
}
